#! /usr/bin/env python
# -*- coding: utf-8 -*-

'''
Created on 23-Nov-2015
@author: irisZhong
'''

import time
import unittest
from selenium import webdriver  
from selenium.webdriver.support.ui import WebDriverWait 


class  JdLogin(unittest.TestCase):
	def setUp(self):
		self.driver = webdriver.Firefox() 
		self.driver.get("https://passport.jd.com/uc/login")
		print "Page loaded."
		print "Browser maximized."
		self.driver.maximize_window()

	def test_no_pwd(self):
		driver = self.driver
		print "*******************Test Case: enter empty password.***********************."

		username = "949654447@qq.com" 
		password = ""

		loginElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("loginname"))
		passwordElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("nloginpwd"))
		submitElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("loginsubmit"))
		
		loginElement.send_keys(username)
		print "Account entered."
		time.sleep(1)

		passwordElement.send_keys(password)
		print "Password entered."
		time.sleep(1)

		submitElement.click()
		print "Button clicked."
		time.sleep(1)


		self.assertTrue(WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_class_name("msg-error")))
		# print driver.find_element_by_class_name("msg-error")
		# print driver.find_element_by_xpath("//div[@class = 'msg-error' ]")
		msgerror = driver.find_element_by_class_name("msg-error").text
		self.assertEqual(msgerror, u"请输入密码")
		print "error message: %s" % msgerror
		

	def test_normal_account(self):
		driver = self.driver
		print "*******************Test Case: enter normal account.***********************."

		username = "949654447@qq.com" 
		password = "iris949654447"

		loginElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("loginname"))
		passwordElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("nloginpwd"))
		submitElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("loginsubmit"))
		
		loginElement.send_keys(username)
		print "Account entered."
		time.sleep(1)

		passwordElement.send_keys(password)
		print "Password entered."
		time.sleep(1)

		submitElement.click()
		print "Button clicked."
		time.sleep(1)

		assert u"京东(JD.COM)-综合网购首选" in self.driver.title

		# assert u"京东(JD.COM)-综合网购首选" in driver.title


	def test_wrong_pwd(self):
		driver = self.driver
		print "*******************Test Case: enter wrong password.***********************."

		username = "949654447@qq.com" 
		password = "hahahaha"

		loginElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("loginname"))
		passwordElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("nloginpwd"))
		submitElement = WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_id("loginsubmit"))
		
		loginElement.send_keys(username)
		print "Account entered."
		time.sleep(1)

		passwordElement.send_keys(password)
		print "Password entered."
		time.sleep(1)

		submitElement.click()
		print "Button clicked."
		time.sleep(1)

		self.assertTrue(WebDriverWait(driver, 10).until(lambda driver: driver.find_element_by_class_name("msg-error")))
		msgerror = driver.find_element_by_class_name("msg-error").text
		self.assertEqual(msgerror, u"账户名与密码不匹配，请重新输入")
		print "error message: %s" % msgerror

	def tearDown(self):
		self.driver.quit()

if __name__ == "__main__":
	unittest.main()
