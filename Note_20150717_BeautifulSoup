Beautiful Soup transforms a complex HTML document into a complex tree of Python objects.
four kinds of objects: Tag, NavigableString, BeautifulSoup, and Comment.
eg1:
In [12]: from bs4 import BeautifulSoup

In [13]: html_doc = """
   ....: <html><head><title>The Dormouse's story</title></head>
   ....:
   ....: <p class="title"><b>The Dormouse's story</b></p>
   ....:
   ....: <p class="story">Once upon a time there were three little sisters; and
their names were
   ....: <a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>,

   ....: <a href="http://example.com/lacie" class="sister" id="link2">Lacie</a>
and
   ....: <a href="http://example.com/tillie" class="sister" id="link3">Tillie</a
>;
   ....: and they lived at the bottom of a well.</p>
   ....:
   ....: <p class="story">...</p>
   ....: """

In [14]: soup = BeautifulSoup(html_doc)
In [15]: print(soup.prettify())
<html>
 <head>
  <title>
   The Dormouse's story
  </title>
 </head>
 <body>
  <p class="title">
   <b>
    The Dormouse's story
   </b>
  </p>
  <p class="story">
   Once upon a time there were three little sisters; and their names were
   <a class="sister" href="http://example.com/elsie" id="link1">
    Elsie
   </a>
   ,
   <a class="sister" href="http://example.com/lacie" id="link2">
    Lacie
   </a>
   and
   <a class="sister" href="http://example.com/tillie" id="link3">
    Tillie
   </a>
   ;
and they lived at the bottom of a well.
  </p>
  <p class="story">
   ...
  </p>
 </body>
</html>

In [16]: soup.title
Out[16]: <title>The Dormouse's story</title>

In [17]: soup.title.name
Out[17]: 'title'

In [18]: soup.title.string
Out[18]: u"The Dormouse's story"

In [19]: soup.title.parent.name
Out[19]: 'head'


In [20]: soup.p
Out[20]: <p class="title"><b>The Dormouse's story</b></p>

In [21]: soup.p['class']
Out[21]: ['title']

In [22]: soup.a
Out[22]: <a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>

In [23]: soup.find_all('a')
Out[23]:
[<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,
 <a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>,
 <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>]

In [24]: soup.find(id='link3')
Out[24]: <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a
>
In [25]: for link in soup.find_all('a'):
   ....:     print(link.get('href'))
   ....:
http://example.com/elsie
http://example.com/lacie
http://example.com/tillie

In [26]: print(soup.get_text())
The Dormouse's story
The Dormouse's story
Once upon a time there were three little sisters; and their names were
Elsie,
Lacie and
Tillie;
and they lived at the bottom of a well.
...

eg2: Tag
In [27]: soup = BeautifulSoup('<b class="boldest">Extremely bold</b>')

In [28]: tag = soup.b

In [29]: type(tag)
Out[29]: bs4.element.Tag

In [30]: tag.name
Out[30]: 'b'

In [31]: tag.name = "blockquote"

In [32]: tag
Out[32]: <blockquote class="boldest">Extremely bold</blockquote>

In [33]:  soup = BeautifulSoup('<b class="boldest">Extremely bold</b>')

In [34]: tag = soup.b

In [35]: tag['class']
Out[35]: ['boldest']

In [36]: tag.attrs
Out[36]: {'class': ['boldest']}

In [37]: tag['class'] = 'verybold'

In [38]: tag['id'] = 1

In [39]: tag
Out[39]: <b class="verybold" id="1">Extremely bold</b>

In [40]: del tag['class']

In [41]: del tag['id']

In [42]: tag
Out[42]: <b>Extremely bold</b>

In [43]: tag['class']

eg3: NavigableString

In [50]: tag.string
Out[50]: u'Extremely bold'

In [51]: type(tag.string)
Out[51]: bs4.element.NavigableString

In [52]: unicode_string = unicode(tag.string)

In [53]: unicode_string
Out[53]: u'Extremely bold'

In [54]: type(unicode_string)
Out[54]: unicode

In [55]: tag.string.replace_with("No longer bold")
Out[55]: u'Extremely bold'

In [56]: tag
Out[56]: <b>No longer bold</b>

eg3: BeautifulSoup

In [57]: soup.name
Out[57]: u'[document]'

eg4: Comment
In [58]: markup = "<b><!--Hey, buddy. Want to buy a used parser?--></b>"

In [59]: soup = BeautifulSoup(markup)

In [60]: comment = soup.b.string

In [61]: type(co)
Contacts/ coerce    comment   complex   continue  copyright
Cookies/  %colors   compile   %config   %copy

In [61]: type(comment)
Out[61]: bs4.element.Comment

eg5: Navigating the tree
In [74]: html_doc = """
   ....: <html><head><title>The Dormouse's story</title></head>
   ....:
   ....: <p class="title"><b>The Dormouse's story</b></p>
   ....:
   ....: <p class="story">Once upon a time there were three little sisters; and
their names were
   ....: <a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>,

   ....: <a href="http://example.com/lacie" class="sister" id="link2">Lacie</a>
and
   ....: <a href="http://example.com/tillie" class="sister" id="link3">Tillie</a
>;
   ....: and they lived at the bottom of a well.</p>
   ....:
   ....: <p class="story">...</p>
   ....: """

In [75]: from bs4 import BeautifulSoup

In [76]: soup = BeautifulSoup(html_doc)

In [77]: soup.head
Out[77]: <head><title>The Dormouse's story</title></head>

In [78]: soup.title
Out[78]: <title>The Dormouse's story</title>

In [79]: soup.body.b
Out[79]: <b>The Dormouse's story</b>

In [80]: soup.a
Out[80]: <a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>

In [81]: soup.find_all('a')
Out[81]:
[<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,
 <a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>,
 <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>]



2015-07-24
In [3]: html_doc = """
   ...: <html><head><title>The Dormouse's story</title></head>
   ...:
   ...: <p class="title"><b>The Dormouse's story</b></p>
   ...:
   ...: <p class="story">Once upon a time there were three little sisters; and t
heir names were
   ...: <a href="http://example.com/elsie" class="sister" id="link1">Elsie</a>,
   ...: <a href="http://example.com/lacie" class="sister" id="link2">Lacie</a> a
nd
   ...: <a href="http://example.com/tillie" class="sister" id="link3">Tillie</a>
;
   ...: and they lived at the bottom of a well.</p>
   ...:
   ...: <p class="story">...</p>
   ...: """

In [4]: from bs4 import BeautifulSoup

In [5]: soup = BeautifulSoup(html_doc)

In [6]: print(soup.prettify())
<html>
 <head>
  <title>
   The Dormouse's story
  </title>
 </head>
 <body>
  <p class="title">
   <b>
    The Dormouse's story
   </b>
  </p>
  <p class="story">
   Once upon a time there were three little sisters; and their names were
   <a class="sister" href="http://example.com/elsie" id="link1">
    Elsie
   </a>
   ,
   <a class="sister" href="http://example.com/lacie" id="link2">
    Lacie
   </a>
   and
   <a class="sister" href="http://example.com/tillie" id="link3">
    Tillie
   </a>
   ;
and they lived at the bottom of a well.
  </p>
  <p class="story">
   ...
  </p>
 </body>
</html>

In [7]: soup.title
Out[7]: <title>The Dormouse's story</title>

In [8]: soup.title.name
Out[8]: 'title'

In [10]: type(soup.title)
Out[10]: bs4.element.Tag

In [11]: type(soup.title.name)
Out[11]: str

In [12]: soup.title.string
Out[12]: u"The Dormouse's story"

In [13]: type(soup.title.string)
Out[13]: bs4.element.NavigableString

In [14]: type(soup)
Out[14]: bs4.BeautifulSoup

In [15]: soup.title.parent
Out[15]: <head><title>The Dormouse's story</title></head>

In [16]: type(soup.title.parent)
Out[16]: bs4.element.Tag

In [17]: soup.title.parent.name
Out[17]: 'head'

In [18]: soup.p
Out[18]: <p class="title"><b>The Dormouse's story</b></p>

In [19]: type(soup.p)
Out[19]: bs4.element.Tag

In [20]: soup.p['class']
Out[20]: ['title']

In [21]: soup.a
Out[21]: <a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>

In [22]: soup.a['href']
Out[22]: 'http://example.com/elsie'

In [23]: soup.a['class']
Out[23]: ['sister']

In [24]: soup.find_all('a')
Out[24]:
[<a class="sister" href="http://example.com/elsie" id="link1">Elsie</a>,
 <a class="sister" href="http://example.com/lacie" id="link2">Lacie</a>,
 <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a>]
 
In [25]: type(soup.find_all('a'))
Out[25]: bs4.element.ResultSet

In [26]: soup.find(id="link3")
Out[26]: <a class="sister" href="http://example.com/tillie" id="link3">Tillie</a
>

In [27]: type(soup.find(id="link3"))
Out[27]: bs4.element.Tag

In [28]: for link in soup.find_all('a'):
   ....:     print(link.get('href'))
   ....:
http://example.com/elsie
http://example.com/lacie
http://example.com/tillie

In [29]: for link in soup.find_all('a'):
   ....:     print type(link)
   ....:     print link.get('href')
   ....:
<class 'bs4.element.Tag'>
http://example.com/elsie
<class 'bs4.element.Tag'>
http://example.com/lacie
<class 'bs4.element.Tag'>
http://example.com/tillie

In [30]: print soup.get_text()
The Dormouse's story
The Dormouse's story
Once upon a time there were three little sisters; and their names were
Elsie,
Lacie and
Tillie;
and they lived at the bottom of a well.
...















