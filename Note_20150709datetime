一.用datetime模块打印时间戳
eg1
In [8]: from datetime import datetime

In [9]: dt = datetime.now()

In [10]: dt.strftime('%Y-%m-%d %H:%M:%S %f')
Out[10]: '2015-07-09 14:08:30 482000'

In [11]: dt.strftime('%Y-%m-%d %H:%M:%S')
Out[11]: '2015-07-09 14:08:30'

In [12]: dt.strftime('%H:%M:%S')
Out[12]: '14:08:30'

In [13]: dt.strftime('%Y-%m-%d')
Out[13]: '2015-07-09'

In [14]:


二.gevent和datetime

eg2
#! /usr/bin/env python
# -*- coding: utf-8 -*-

import gevent
import random
from datetime import datetime

def task(pid):
	'''
	some non-deterministic task
	'''
	gevent.sleep(random.randint(0, 2)*0.001)
	print('Task %s done' % pid)

def synchronous():
	for i in range(1, 10):
		task(i)

def asynchronous():
	threads = [gevent.spawn(task, i) for i in xrange(10)]
	gevent.joinall(threads)

dt = datetime.now()
print datetime.now().strftime('%Y-%m-%d %H:%M:%S %f')
print('Synchronous:')
synchronous()
print datetime.now().strftime('%Y-%m-%d %H:%M:%S %f')

print datetime.now().strftime('%Y-%m-%d %H:%M:%S %f')
print('Asynchronous:')
asynchronous()
print datetime.now().strftime('%Y-%m-%d %H:%M:%S %f')

result:
2015-07-09 14:12:48 988000
Synchronous:
Task 1 done
Task 2 done
Task 3 done
Task 4 done
Task 5 done
Task 6 done
Task 7 done
Task 8 done
Task 9 done
2015-07-09 14:12:49 005000
2015-07-09 14:12:49 005000
Asynchronous:
Task 3 done
Task 4 done
Task 5 done
Task 7 done
Task 8 done
Task 9 done
Task 0 done
Task 6 done
Task 2 done
Task 1 done
2015-07-09 14:12:49 008000
[Finished in 0.1s]
