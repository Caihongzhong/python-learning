1. super(type[, object-or-type])

2. getattr(object, name[, default])
Return the value of the named attribute of object. name must be a string. 
If the string is the name of one of the object’s attributes, 
the result is the value of that attribute. 
For example, getattr(x, 'foobar') is equivalent to x.foobar. 
If the named attribute does not exist, default is returned if provided, 
otherwise AttributeError is raised.

3. hasattr(object, name)
The arguments are an object and a string. 
The result is True if the string is the name of one of the object’s attributes, False if not. 

4. dict
dict.update(dict2)
dict2 -- This is the dictionary to be added into dict.

Return Value
This method does not return any value.

5. isinstance(object, classinfo)
Return true if the object argument is an instance of the classinfo argument,
or of a (direct, indirect or virtual) subclass thereof.

6. str.format(*args, **kwargs)
Perform a string formatting operation. 
The string on which this method is called can contain literal text or replacement fields delimited by braces {}. 
Each replacement field contains either the numeric index of a positional argument, or the name of a keyword argument. 
Returns a copy of the string where each replacement field is replaced with the string value of the corresponding argument.

In [1]: "The sum of 1+2 is {0}".format(1+2)
Out[1]: 'The sum of 1+2 is 3'

In [2]: "The sum of 1+2 is {0} {1}".format(1+2, 3)
Out[2]: 'The sum of 1+2 is 3 3'

7. os模块os.rename
In [6]: import os

In [7]: os.mkdir("test")

In [8]: os.getcwd()
Out[8]: 'C:\\Users\\Administrator'

In [9]: os.listdir("test")
Out[9]: []

In [11]: os.mkdir("test/test1")

In [13]: os.listdir("test")
Out[13]: ['test1']

In [15]: os.rename("test/test1", "test/test2")

In [16]: os.listdir("test")
Out[16]: ['test2']

In [17]: os.rename("test/test2", "test/test3")

In [18]: os.rename("test/test3", "test1/test4")
---------------------------------------------------------------------------
WindowsError                              Traceback (most recent call last)
<ipython-input-18-a78628186080> in <module>()
----> 1 os.rename("test/test3", "test1/test4")

WindowsError: [Error 3]

In [19]: os.renames("test/test3", "test1/test4")






